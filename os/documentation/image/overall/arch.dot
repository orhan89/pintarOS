digraph Command_Interpreter {

//rankdir=LR
//constraint=false
//rank=sink
nodesep = 0.5
ranksep = 1
center = true

 node [
         fontname = "Bitstream Vera Sans"
         fontsize = 8
         shape = "record"
     ]

 edge [
         fontname = "Bitstream Vera Sans"
         fontsize = 8
         fontcolor = "Red"         
     ]

// all blocks
{
rank = "same"
invis_a [style="invis"]
state [label="State\nManager", shape="circle", fixedsize=true, width=1];
invis_b [style="invis"]
invis_a -> state -> invis_b [style="invis", minlen = 3]
invis_b -> state -> invis_a [style="invis", minlen = 3]
}

{
rank=same
crypt [label="Crypto\nLib", shape="circle", fixedsize=true, width=1]
command [label="Command\nHandler", shape = "circle", fixedsize=true, width=1]
fs [label="File\nSystem", shape="circle", fixedsize=true, width=1]
}

response [label="Response\nManager", shape = "circle", fixedsize=true, width=1]

{
rank=same
invis_c [style="invis", shape="circle", fixedsize=true, width=1]
trans [label="Transmission\nHandler", shape="circle", fixedsize=true, width=1]
mem [label="Memory Handler", shape="circle", fixedsize=true, width=1]
invis_c -> trans -> mem [style="invis", minlen = 3] 
mem -> trans -> invis_c [style="invis", minlen = 3]
}

{
rank=same
hal_crypto [label="HAL Crypto", style="invis", shape="circle", fixedsize=true, width=1]
hal_io [label="HAL IO", shape="circle", fixedsize=true, width=1]
hal_mem [label="HAL MMU", shape="circle", fixedsize=true, width=1]
hal_crypto -> hal_io -> hal_mem [style="invis", minlen = 3] 
hal_mem -> hal_io -> hal_crypto [style="invis", minlen = 3]
}

// relations
//state -> crypt -> command -> fs -> trans -> hal_io -> mem
invis_a -> crypt [style="invis"]
crypt -> invis_a [style="invis"]
state -> crypt [label="plain (enc),\nencrypted (dec)"]
crypt -> state [label="encrypted (enc),\nplain (enc)"]
state -> command [label="challenge (get)\nsecurity state (get)"]
command -> state [label="PIN (verify),\nKey (ext. auth)"]
state -> fs [label="current file/record(get),\nsecurity state (get)"]
fs -> state [label="current file/record(set)"]
invis_b -> fs [style="invis"]
command -> crypt [label="plain (enc),\nencrypted (dec)"]
crypt -> command [label="encrypted (enc),\nplain (enc)"]
command -> fs [label="data (update),\noffset (read,update),\nfid (select/delete file),\nfile info (create file)"]
fs -> command [label="data (read),\naccess right (read, update)"]
//crypt -> hal_crypto [label="data (write),\noffset (write),\nlength (write)", constraint=false]
//hal_crypto -> crypt [label="data (write),\noffset (write),\nlength (write)", constraint=false]
crypt -> invis_c [style="invis"]

command -> response [label="response type"]
//response -> command [style="invis"]

trans -> command [label="command header,\ncommand data"]
command -> trans [label="response data"]

//trans -> response [style="invis"]
response -> trans [label="sw"]

//fs -> invis_d [style="invis"]
mem -> fs [label="data (read),\noffset (read),\nlength (read)", constraint=false]
fs -> mem [label="data (write),\noffset (write),\nlength (write)", constraint=false]
invis_c -> hal_crypto [style="invis"]
hal_io -> trans [label="data byte (receive)"]
trans -> hal_io [label="data byte (send)"]
//invis_d-> mem [style="invis"]
hal_mem -> mem [label="data (read),\noffset (read)", constraint=false]
mem -> hal_mem [label="data (write),\noffset (write)", constraint=false]


}